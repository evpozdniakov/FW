<?phpclass ClientSide extends Smarty{	function ClientSide(){		if( method_exists($this,'__construct') ){			parent::__construct();		}else{			parent::Smarty();		}		$this->template_dir=SMARTY_TPL_DIR.'/templates/';		$this->models_dir=SITE_DIR.'/admin/models/';		//$this->plugins_dir=SMARTY_TPL_DIR.'/templates/plugins/';		$this->compile_dir=SMARTY_TPL_DIR.'/templates_c/';		$this->config_dir=SMARTY_TPL_DIR.'/configs/';		$this->cache_dir=SMARTY_TPL_DIR.'/cache/';		if( defined('SMARTY_SYNTAX') ){			$delimiters=explode(' ',SMARTY_SYNTAX);			$this->left_delimiter=$delimiters[0];			$this->right_delimiter=$delimiters[1];		}else{			$this->left_delimiter="<%";			$this->right_delimiter="%>";		}		// для Smarty 3 устанавливаем allow_php_tag=true		// и добавляем путь к плагинам		if( $this->version()==3 ){			$this->allow_php_tag=true;			$this->plugins_dir[]=SMARTY_TPL_DIR.'/plugins/';		}		//если в конфиге установлена константа DEBUG, то смарти будет перекомпелировать шаблоны всякий раз		$this->force_compile=(bool)(DEBUG===true);		//если в конфиге установлена константа DEBUG_SMARTY_CONSOLE_ON, то включаем консоль отладки смарти		$this->debugging=(bool)(DEBUG_SMARTY_CONSOLE_ON===true);	}	function init(){		//находим нужную страницу рекурсивно, собирая массив $structure_data		$structure_data=$this->getRecStructureDataByUrl();//_print_r($structure_data);_die('');		if( !is_array($structure_data) ){			_die('0 records in structure with parent=0, you should specify home page');		}		$this->structure_data=$structure_data;		$this->assign('structure_data',$this->structure_data);		$this->structure_data_reverse=array_reverse($structure_data);		$this->assign('structure_data_reverse',$this->structure_data_reverse);	}	function version(){		return intval(mb_substr($this->_version,7));	}	function getRecStructureDataByUrl($parent=0,$path_part=0){//рекурсивно находим строку в таблице structure, соответствующую $GLOBALS['path']		//_echo($GLOBALS['path'][$path_part]);		if($path_part>0){			$url=$GLOBALS['path'][$path_part];		}else{			$url=defvar('',DOMAIN);		}		$dbq=new DBQ('			select 				*			from 				structure 			where 				parent=? 				and url like ? 				and is_hidden="no"		'			,$parent			,$url		);		//_echo($dbq->query);		if($dbq->rows==1){			if(!empty($dbq->line['view'])){				$view_arr=explode(':',$dbq->line['view']);				$dbq->line['obj_views']=&gmv($view_arr[0]);				$dbq->line['view']=$view_arr[1];			}			$result[$path_part]=$dbq->line;			if(isset($GLOBALS['path'][$path_part+1]) && $GLOBALS['path'][$path_part+1]!=''){				$dbq->line=$this->getRecStructureDataByUrl($dbq->items[0]['id'],($path_part+1));				if(is_array($dbq->line)){					$result=_array_merge($result,$dbq->line);				}			}		}else{			$GLOBALS['structure_error']=true;			$GLOBALS['error']=404;		}		if(isset($result)){			return $result;		}	}	function runTemplate(){		//НЕ перед тем как запустить метод, А ДАЖЕ ПЕРЕД ПОИСКОМ МЕТОДА		//один раз за сессию инклюдим общий _vews_init.php		if(!$this->common_views_included){			include(SITE_DIR.'/admin/models/_views_init.php');			$this->common_views_included=true;		}		if(is_array($this->structure_data_reverse)){			$template_found=false;			foreach($this->structure_data_reverse as $path_part_num=>$data){				if($data['template']!=''){					$template_file=$data['template'].'.tpl';					if(file_exists($this->template_dir.$template_file)){						//запускаем главный обработчик, его содержимое запоминаем в __CONTENT__						ob_start();						$this->render($this->defaultView());						smartas('__CONTENT__',trim(ob_get_contents()));						ob_end_clean();												// проверяем на ошибки 403, 404						if( $GLOBALS['error']==403 ){							if(!file_exists(SMARTY_TPL_DIR.'/templates/e_403.tpl')){_die('e_403.tpl required!');}							$template_file='e_403.tpl';						}elseif( $GLOBALS['error']==404 ){							if(!file_exists(SMARTY_TPL_DIR.'/templates/e_404.tpl')){_die('e_404.tpl required!');}							$template_file='e_404.tpl';						}						//кладем выходной поток в буфер						ob_start();						//_logm('template '.$template_file);						$this->display($template_file);						$html=trim(ob_get_contents());						ob_end_clean();						//если в процессе создания страницы обнаружено, что такой страницы нет (404)						//то дальнейшая обработка прекращается на уровне tpl, и в кэш страница не попадает						if( USE_CACHE===true && empty($GLOBALS['error']) ){							$_cache_obj=&gmo('_cache');							$_cache_obj->try2cache($html);						}						echo $html;						unset($html);						$template_found=true;						break;					}				}			}			if(!$template_found && DEBUG===true){				if($data['template']!=''){					_die('шаблон '.$data['template'].'.tpl не найден в '.$this->template_dir);				}else{					_die('странице не задан шаблон');				}			}		}else{_die('empty $this->structure_data array in runTemplate()');}		/*			метод runTemplate() запускается из init() единственный раз.			именно этот метод содержит в себе запуск всех процессов 			от начала до конца по формированию внешнего вида страницы			и имеено в конце этого метода нужно вызвать окно с отладкой БД		*/		$this->consoleDB();		if(DEBUG===true){			if( $this->version()==3 ){				$this->clearCompiledTemplate();			}else{				$this->clear_compiled_tpl();			}		}		//_logm('END');	}	function render($view='',$params=''){		if(mb_strpos($view,'->')>0){			$view_arr=explode('->',$view);			$obj_views=&gmv($view_arr[0]);			if( !is_object($obj_views) ){_die('gmv('.$view_arr[0].') не является объектом');}			$obj_views_methods=get_class_methods($obj_views->__name__);			$end=mb_strpos($view_arr[1],'(');			$view=mb_substr($view_arr[1],0,$end);			if( !in_array($view,$obj_views_methods) && !in_array(strtolower($view),$obj_views_methods) ){_die('метод ->'.$view.'() отсутствует у объекта '.$obj_views->__name__);}			if( empty($params) ){				$params=mb_substr($view_arr[1],$end+1,-1);				if(mb_strpos($params,',')!==false){					$params=explode(',',$params);				}			}			//_print_r($obj_views);_echo('$view='.$view);_echo('$params='.$params);			$this->runView($obj_views,$view,$params);		}else{			$this->_autoRender($view);		}	}	function renderCache($view=''){		if( empty($view) ){			$view=$this->defaultView();		}		$_cache_obj=&gmo('_cache');		$html=$_cache_obj->try2useCacheBlock($view);		if( $html===false ){			ob_start();			$this->render($view);			$html=trim(ob_get_contents());			ob_end_clean();			$_cache_obj->try2cacheBlock($view,$html);		}		echo $html;	}	function _autoRender($view){		$view_found=false;		$view_output=false;		if(mb_substr($view,-2)=='()'){			$view=mb_substr($view,0,-2);//важно преобразовать к нижнему регистру для сравнения с get_class_methods			if(is_array($this->structure_data_reverse)){				foreach($this->structure_data_reverse as $path_part_num=>$data){					if(is_object($data['obj_views'])){						$obj_views_methods=get_class_methods($data['obj_views']->__name__);						if(in_array($view,$obj_views_methods) || in_array(strtolower($view),$obj_views_methods)){//_echo($view.'() найден среди методов класса '.$data['obj_views']->__name__);							$view_found=true;							//_print_r($obj_views);_echo('$view='.$view);							$view_output=$this->runView($data['obj_views'],$view);							break;						}					}				}			}else{_die('empty $this->structure_data array in render()');}		}		if(!$view_found && DEBUG===true){_echo('<b style="color:red;">метод ->'.$view.'() не найден среди методов обработчиков</b><br>');}		$template_found=false;		if( !$view_output ){			//найденный метод не вернул никакого значения, поэтому нужно подключать шаблон			if(is_array($this->structure_data_reverse)){				foreach($this->structure_data_reverse as $path_part_num=>$data){					$obj_views_parent_name=mb_substr($data['obj_views']->__name__,0,-5);					if( (string)$obj_views_parent_name!='' ){						$template_file=$obj_views_parent_name.'/'.$view.'.tpl';						if(file_exists($this->template_dir.$template_file)){							//_logm('template '.$template_file);							$this->display($template_file);							$template_found=true;							break;						}					}				}			}			if(!$template_found && DEBUG===true){				_echo('<b style="color:red;">отсутствует шаблон XXX/'.$view.'.tpl<br>или возвращен пустой результат</b><br>');			}		}	}	function runView(&$obj_views,$view,$params=''){		$method_return='';		//запоминаем какая функция была вызвана		$obj_views->callee=$view;		//затем попытаемся запустить метод init() объекта		if(!$obj_views->init_done){			if( in_array('init',get_class_methods($obj_views)) ){				if($GLOBALS['structure_error'] && !$GLOBALS['error_set']){					//определяем 404 ошибку, которую нужно переопределить внутри модели					//делаем это единожды, перед запуском метода init() основного обработчика					//основной обработчик запускается аервым					$GLOBALS['error_set']=true;					$GLOBALS['error']=404;				}				//_logm($obj_views->__name__.'->init()');				// возможно метод init() возвратит нам какой-то результат				$method_return=$obj_views->init();				$obj_views->init_done=true;				//$GLOBALS['obj_models_arr'][strtolower($obj_views->model_name)]->__admin__['views']->init_done=true;			}else{if(DEBUG===true){echo '<b style="color:red;">метод ->init() не определен в модели '.$obj_views->__name__.'</b><br>';}}		}		if(USE_CACHE===true){ // пополняем список использованых моделей			$_cache_obj=&gmo('_cache');			$_cache_obj->addModel($obj_views->model_name);		}		// если $method_return еще не был определен в init(), то запускаем вызванный метод		if(empty($method_return)){			//_logm($obj_views->__name__.'->'.$view);			$method_return=$obj_views->$view($params);		}		if(!empty($method_return) && is_string($method_return)){			//если возвратили непустую строку - выводим эту строку			echo $method_return;			$result=true;		}elseif($method_return===false){			//если возвратили false - ничего не делаем			$result=false;		}else{			//если возвратили true или ничего не возвратили - пытаемся подключить tpl-файл			$template_file=strtolower($obj_views->model_name).'/'.$view.'.tpl';			//ищем tpl-файл в папке с моделью			if(file_exists($this->models_dir.$template_file)){				$this->display($this->models_dir.$template_file);			}elseif(file_exists($this->template_dir.$template_file)){				$this->display($template_file);			}			$result=true;		}		return $result;	}	function defaultView(){		foreach($this->structure_data_reverse as $item){			if($item['view']!=''){				$result=$item['view'].'()';				break;			}		}		if( empty($result)){			_die('не указан view по-умолчанию');		}		return $result;	}	function getVar($var_name){		if( $this->version()==3 ){			return $this->getTemplateVars($var_name);		}else{			return $this->_tpl_vars[$var_name];		}	}	function setVar($var_name,$value){		if( $this->version()==3 ){			$this->assign($var_name,$value);		}else{			$this->_tpl_vars[$var_name]=$value;		}	}	function getCapture($var_name){		return $this->_smarty_vars['capture'][$var_name];	}	function cryptText($text){		//определяем ключ		$key=$_SERVER['SERVER_NAME'];		//заменяем переносы на пробелы		$text=str_replace("\r",' ',$text);		$text=str_replace("\n",' ',$text);		//опередляем набор ascii		$ascii='!"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~';		//определяем набор кириллицы		$cyrillic='АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя';		//кодируем		$result='';		for($i=0;$i<mb_strlen($text);$i++){			$sym=mb_substr($text,$i,1);			$pos=mb_strpos($cyrillic,$sym);			if($pos!==false){				$result.=','.(1040+$pos);			}else{				$pos=mb_strpos($ascii,$sym);				if($pos!==false){					$result.=','.(33+$pos);				}else{					$result.=','.$sym;				}			}		}		//отбрасываем первую зпт		$result=mb_substr($result,1);		return $result;	}	function cryptTextWrite($text){		$result=$this->cryptText($text);		$result='<script type="text/javascript"><!--'."\n".			'$.decryptTextWrite("'.$result.'");'."\n".			'//--></script>'."\n";		echo $result;	}	//console DB	function consoleDB(){		if(DEBUG_DB===true){			if(!file_exists(SMARTY_TPL_DIR.'/templates/e_console_db.tpl')){_die('e_console_db.tpl required!');}			$debug_db_arr = array();			foreach($GLOBALS['debug_db_item']->res as $k=>$v){				$items = array();				foreach ($v as $i=>$j){					$items[] = get_object_vars($j);				}				$debug_db_arr[] = array('name'=>$k, 'items'=>$items);			}			smartas('debug_db_arr',$debug_db_arr);			smartas('debug_db_count', count($debug_db_arr[0]['items']));			smartas('debug_db_stack_ctrl_show', (bool)(DEBUG_DB_SAVE_STACK===true));			smartas('debug_db_ctrl_res', (bool)(DEBUG_DB_INCLUDE_RES===true));			$this->display('e_console_db.tpl');		}	}}